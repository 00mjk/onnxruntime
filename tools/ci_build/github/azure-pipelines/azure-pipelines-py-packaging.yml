jobs:
- job: Manylinux2010_py_Wheels
  pool: Linux-CPU
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
  steps:
    - template: templates/set-test-data-variables-step.yml

    - task: CmdLine@2
      displayName: 'Download azcopy'
      inputs:
        script: |
          curl -so azcopy.tar.gz -L 'https://aka.ms/downloadazcopy-v10-linux'
          tar -zxvf azcopy.tar.gz --strip 1
        workingDirectory: $(Build.BinariesDirectory)

    - task: PythonScript@0
      displayName: 'Download test data'
      inputs:
        scriptPath: '$(Build.SourcesDirectory)/tools/ci_build/github/download_test_data.py'
        arguments: --test_data_url $(TestDataUrl) --build_dir $(Build.BinariesDirectory)
        pythonInterpreter: '/usr/bin/python3'
        workingDirectory: $(Build.BinariesDirectory)

    - task: ShellScript@2
      displayName: 'Run build script'
      inputs:
        scriptPath: 'tools/ci_build/github/linux/run_dockerbuild.sh'
        args: '-c Release -o manylinux2010 -d cpu -r $(Build.BinariesDirectory) -p $(python.version) -x "--use_openmp --enable_language_interop_ops --build_wheel"'

    - task: CopyFiles@2
      displayName: 'Copy Python Wheel to:  $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: '$(Build.BinariesDirectory)'
        Contents: 'Release/dist/*-manylinux2010_x86_64.whl'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: ONNXRuntime python wheel'
      inputs:
        ArtifactName: onnxruntime

    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'

    - template: templates/clean-agent-build-directory-step.yml

parameters:
  DoEsrp: 'false'
  PackageName: 'Microsoft.AI.MachineLearning'

jobs:
- job: WindowsAI_DirectML_X64
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool:
    name: 'Win-GPU-2019'
    demands: []
  steps:
  - template: ../../templates/windowsai-nuget-build.yml
    parameters:
      BuildArch: 'x64'

- job: WindowsAI_DirectML_X86
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool:
    name: 'Win-GPU-2019'
    demands: []
  steps:
  - template: ../../templates/windowsai-nuget-build.yml
    parameters:
      BuildArch: 'x86'

- job: WindowsAI_DirectML_ARM64
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool:
    name: 'Win-CPU-2019'
    demands: []
  steps:
  - template: ../../templates/windowsai-nuget-build.yml
    parameters:
      BuildArch: 'arm64'

- job: WindowsAI_DirectML_ARM
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool:
    name: 'Win-CPU-2019'
    demands: []
  steps:
  - template: ../../templates/windowsai-nuget-build.yml
    parameters:
      BuildArch: 'arm'

- job: NuGet_Packaging
  workspace:
    clean: all
  pool: 'Win-GPU-2019'
  dependsOn:
  - WindowsAI_DirectML_X64
  - WindowsAI_DirectML_X86
#  - WindowsAI_DirectML_ARM64
#  - WindowsAI_DirectML_ARM
  condition: succeeded()
  steps:
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - NuGet DirectML x64'
    inputs:
      artifactName: 'drop-nuget-x64'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact - NuGet DirectML x86'
    inputs:
      artifactName: 'drop-nuget-x86-zip'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

#  - task: DownloadPipelineArtifact@0
#    displayName: 'Download Pipeline Artifact - NuGet DirectML ARM64'
#    inputs:
#      artifactName: 'drop-nuget-arm64-zip'
#      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

#  - task: DownloadPipelineArtifact@0
#    displayName: 'Download Pipeline Artifact - NuGet DirectML ARM'
#    inputs:
#      artifactName: 'drop-nuget-arm-zip'
#      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: PowerShell@2
    displayName: 'Bundle NuGet and other binaries (1)'
    inputs:
      targetType: 'inline'
      script: |
        Get-ChildItem -Filter Microsoft.AI.MachineLearning* -Recurse -ErrorAction SilentlyContinue

  - script: |
     pushd $(Build.BinariesDirectory)\nuget-artifact
     dir
     powershell -Command "Invoke-WebRequest http://stahlworks.com/dev/unzip.exe -OutFile unzip.exe"
     powershell -Command "Invoke-WebRequest http://stahlworks.com/dev/zip.exe -OutFile zip.exe"
     set PATH=%CD%;%PATH%
     FOR /R %%i IN (*.nupkg) do (
         rename %%~ni.nupkg %%~ni.zip
         unzip %%~ni.zip -d %%~ni
         del /Q %%~ni.zip

         unzip Microsoft.AI.MachineLearning.x86.zip -d win-x86
         unzip Microsoft.AI.MachineLearning.arm64.zip -d win-arm64
         unzip Microsoft.AI.MachineLearning.arm.zip -d win-arm

         mkdir %%~ni\runtimes\win-x86
         mkdir %%~ni\runtimes\win-x86\native
         mkdir %%~ni\runtimes\win-arm64
         mkdir %%~ni\runtimes\win-arm64\native
         mkdir %%~ni\runtimes\win-arm
         mkdir %%~ni\runtimes\win-arm\native

         move win-x86\runtimes\win-x86\native\onnxruntime.dll %%~ni\runtimes\win-x86\native\onnxruntime.dll
         move win-x86\runtimes\win-x86\native\onnxruntime.lib %%~ni\runtimes\win-x86\native\onnxruntime.lib
         move win-x86\runtimes\win-x86\native\onnxruntime.pdb %%~ni\runtimes\win-x86\native\onnxruntime.pdb

         move win-x86\runtimes\win-x86\native\microsoft.ai.machinelearning.dll %%~ni\runtimes\win-x86\native\microsoft.ai.machinelearning.dll
         move win-x86\runtimes\win-x86\native\microsoft.ai.machinelearning.lib %%~ni\runtimes\win-x86\native\microsoft.ai.machinelearning.lib
         move win-x86\runtimes\win-x86\native\microsoft.ai.machinelearning.pdb %%~ni\runtimes\win-x86\native\microsoft.ai.machinelearning.pdb

         move win-x86\runtimes\win-x86\native\directml.dll %%~ni\runtimes\win-x86\native\directml.dll

         pushd %%~ni
         zip -r ..\%%~ni.zip .
         popd
         move %%~ni.zip %%~ni.nupkg
     )
     popd
     copy $(Build.BinariesDirectory)\nuget-artifact\Microsoft.AI.MachineLearning*nupkg $(Build.ArtifactStagingDirectory)
    displayName: 'Bundle NuGet and other binaries'

  - template: ../../templates/esrp_nuget.yml
    parameters:
      DisplayName: 'ESRP - sign NuGet package'
      FolderPath: '$(Build.ArtifactStagingDirectory)'
      DoEsrp: ${{ parameters.DoEsrp }}

  - template: ../../templates/validate-nuget.yml
    parameters:
      NugetPath: '$(Build.ArtifactStagingDirectory)'
      NugetPackage: 'Microsoft.AI.MachineLearning*nupkg'
      PlatformsSupported: 'win-x64,win-x86'
      #,win-arm64,win-arm'
      VerifyNugetSigning: ${{ parameters.DoEsrp }}


  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline NuGet Artifact'
    inputs:
      artifactName: 'drop-signed-nuget'
      targetPath: '$(Build.ArtifactStagingDirectory)'

- template: test_win.yml
  parameters:
    AgentPool : 'Win-GPU-2019'
    Skipx86Tests: 'true'

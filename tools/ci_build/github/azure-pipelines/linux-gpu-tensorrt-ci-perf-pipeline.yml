jobs:
- job: Linux_CI_GPU_TENSORRT_PERF
  pool: Linux-GPU-TensorRT-Perf 
  variables:
    ALLOW_RELEASED_ONNX_OPSET_ONLY: '1'
  timeoutInMinutes: 1200 
  steps:
    #- template: templates/set-test-data-variables-step.yml
    
    - script: 'export DATE=`date +"%m-%d-%Y-%H-%M"` && echo $DATE > date.txt && $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/perf.sh "onnx-models" `echo $DATE`'
      displayName: 'Command Line Script 1'
      workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'

    - script: 'export DATE=`date +"%m-%d-%Y-%H-%M"` && echo $DATE > date.txt && $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/perf.sh "many-models" `echo $DATE`'
      displayName: 'Command Line Script 2'
      workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'

    - script: 'export DATE=`date +"%m-%d-%Y-%H-%M"` && echo $DATE > date.txt && $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/perf.sh "partner-models" `echo $DATE`'
      displayName: 'Command Line Script 3'
      workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'

    - script: 'mkdir $(Build.SourcesDirectory)/Artifact && cp -r $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/result/`cat date.txt` $(Build.SourcesDirectory)/Artifact' 
      displayName: 'Prepare Artifacts'
      workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.SourcesDirectory)/Artifact'
        artifactName: 'result'

    - template: templates/clean-agent-build-directory-step.yml
